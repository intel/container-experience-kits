---

# The installation steps based https://dgpu-docs.intel.com
- name: Download Intel graphic gpg key in text format
  ansible.builtin.get_url:
    url: "{{ gpu_repo_key_url }}"
    dest: "{{ gpu_key_text_path }}"
    force: true
    mode: '0644'

# TODO: This file will block the gpg command if not removed.
- name: Remove the key file
  ansible.builtin.file:
    state: absent
    path: "{{ gpu_usr_key_path }}"

- name: Add Intel graphic gpg key to system
  command: "gpg --dearmor --output {{ gpu_usr_key_path }} {{ gpu_key_text_path }}"
  changed_when: false

- name: Add Intel graphic driver repo
  ansible.builtin.apt_repository:
    filename: "{{ gpu_repo_list_filename }}"
    repo: "deb [arch=amd64 signed-by={{ gpu_usr_key_path }}] {{ gpu_repo_ubuntu_url }} {{ gpu_repo_spec }}"
    state: present
    update_cache: true

- name: Set fact for kernel version
  ansible.builtin.set_fact:
    kernel_ver: "{{ ansible_kernel }}"

- name: Add support for multi-gpu system
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    line: GRUB_CMDLINE_LINUX="${GRUB_CMDLINE_LINUX} pci=realloc=off"
  register: boot_entry_cmdline_1

- name: Force probe and enable GUC
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    line: GRUB_CMDLINE_LINUX="${GRUB_CMDLINE_LINUX} i915.enable_guc=3 i915.force_probe=*"
  register: boot_entry_cmdline_2


- name: Update boot configure
  ansible.builtin.command: "update-grub"
  changed_when: false
  when:
    - boot_entry_cmdline_1.changed or
      boot_entry_cmdline_2.changed

# install kmd for supported kernel
- block:
    - name: Install kernel headers incase it missed
      ansible.builtin.apt:
        name: linux-headers-{{ kernel_ver }}

    - name: Install kernel dkms packages
      ansible.builtin.apt:
        name: "{{ kernel_ubuntu_dkms_packages }}"

    - name: Install gpu kernel mode driver packages
      ansible.builtin.apt:
        name: "{{ gpu_kmd_packages[0] }}"
        allow_downgrade: true
      register: gpu_kmd
  when:
    - ansible_kernel is version('6.8.0-41', '<=')

- name: Install gpu firmware packages
  ansible.builtin.apt:
    name: "{{ gpu_kmd_packages[1] }}"
    allow_downgrade: true
  register: gpu_firmware

- name: Install gpu user mode driver and runtime packages
  ansible.builtin.apt:
    name: "{{ gpu_umd_rt_packages }}"
    allow_downgrade: true

- name: Install gpu dev packages
  ansible.builtin.apt:
    name: "{{ gpu_dev_packages }}"
    allow_downgrade: true

- debug:
    msg: "current kernel is : {{ ansible_kernel }}"

# workaround kernel 6.8+ gpu detect issue
#- block:
#    - name: Create GPU driver folder
#      ansible.builtin.file:
#        path: "{{ gpu_driver_path }}"
#        state: directory
#        mode: 0755

#    - name: Set default GPU package URLs
#      set_fact:
#        igc_core_url: "https://github.com/intel/intel-graphics-compiler/releases/download/igc-1.0.16510.2/intel-igc-core_1.0.16510.2_amd64.deb"
#        igc_opencl_url: "https://github.com/intel/intel-graphics-compiler/releases/download/igc-1.0.16510.2/intel-igc-opencl_1.0.16510.2_amd64.deb"
#        level_zero_gpu_url: "https://github.com/intel/compute-runtime/releases/download/24.13.29138.7/intel-level-zero-gpu_1.3.29138.7_amd64.deb"
#        opencl_icd_url: "https://github.com/intel/compute-runtime/releases/download/24.13.29138.7/intel-opencl-icd_24.13.29138.7_amd64.deb"
#        igdgmm_url: "https://github.com/intel/compute-runtime/releases/download/24.13.29138.7/libigdgmm12_22.3.18_amd64.deb"
#        igdgmm_dev_url: "https://github.com/intel/compute-runtime/releases/download/24.13.29138.7/libigdgmm-dev_22.3.18_amd64.deb"
#      when: not prc_network | bool

#    - name: Set GPU package URLs for PRC network
#      set_fact:
#        igc_core_url: "{{ prc_github_mirror }}/github.com/intel/intel-graphics-compiler/releases/download/igc-1.0.16510.2/intel-igc-core_1.0.16510.2_amd64.deb"
#        igc_opencl_url: "{{ prc_github_mirror }}/github.com/intel/intel-graphics-compiler/releases/download/igc-1.0.16510.2/intel-igc-opencl_1.0.16510.2_amd64.deb"
#        level_zero_gpu_url: "{{ prc_github_mirror }}/github.com/intel/compute-runtime/releases/download/24.13.29138.7/intel-level-zero-gpu_1.3.29138.7_amd64.deb"
#        opencl_icd_url: "{{ prc_github_mirror }}/github.com/intel/compute-runtime/releases/download/24.13.29138.7/intel-opencl-icd_24.13.29138.7_amd64.deb"
#        igdgmm_url: "{{ prc_github_mirror }}/github.com/intel/compute-runtime/releases/download/24.13.29138.7/libigdgmm12_22.3.18_amd64.deb"
#        igdgmm_dev_url: "{{ prc_github_mirror }}/github.com/intel/compute-runtime/releases/download/24.13.29138.7/libigdgmm-dev_22.3.18_amd64.deb"
#      when: prc_network | bool

#    - name: Download GPU packages
#      ansible.builtin.get_url:
#        url: "{{ item }}"
#        dest: "{{ gpu_driver_path }}"
#        mode: '0644'
#      with_items:
#        - "{{ igc_core_url }}"
#        - "{{ igc_opencl_url }}"
#        - "{{ level_zero_gpu_url }}"
#        - "{{ opencl_icd_url }}"
#        - "{{ igdgmm_url }}"
#        - "{{ igdgmm_dev_url }}"

#    - name: Find GPU packages
#      find:
#        paths: "{{ gpu_driver_path }}"
#        patterns: "*.deb"
#      register: gpu_packages

#    - name: Install GPU packages
#      apt:
#        deb: "{{ item.path }}"
#        force: true
#      with_items:
#        - "{{ gpu_packages.files }}"

    # - name: Install GPU packages
    #   apt:
    #     deb: "{{ item }}"
    #     force: true
    #   with_items:
    #     - "{{ (gpu_driver_path, 'libigdgmm12_22.3.18_amd64.deb') | path_join }}"
    #     - "{{ (gpu_driver_path, 'libigdgmm-dev_22.3.18_amd64.deb') | path_join }}"
    #     - "{{ (gpu_driver_path, 'intel-igc-core_1.0.16510.2_amd64.deb') | path_join }}"
    #     - "{{ (gpu_driver_path, 'intel-igc-opencl_1.0.16510.2_amd64.deb') | path_join }}"
    #     - "{{ (gpu_driver_path, 'intel-level-zero-gpu_1.3.29138.7_amd64.deb') | path_join }}"
    #     - "{{ (gpu_driver_path, 'intel-opencl-icd_24.13.29138.7_amd64.deb') | path_join }}"

#  when:
#    - ansible_kernel is version('6.9', '>=') or
#      configured_arch in ['ultra']

- name: Install gpu tool packages
  ansible.builtin.apt:
    name: "{{ gpu_tool_packages }}"
    allow_downgrade: true

- name: Install gpu test packages
  ansible.builtin.apt:
    name: "{{ gpu_ubuntu_test_packages }}"
    allow_downgrade: true

- name: Reboot the system for these changes to take effect
  ansible.builtin.reboot:
    reboot_timeout: 1200
  when:
    - inventory_hostname != 'localhost'
    - boot_entry_cmdline_1.changed or
      boot_entry_cmdline_2.changed or
      gpu_kmd.changed or
      gpu_firmware.changed

- name: Create render group if it doesn't exist
  group:
    name: render
    state: present

- name: Add the current user to the render node group
  user:
    name: "{{ ansible_user_id }}"
    groups: render
    append: true

- name: Apply the current user to the new group id immediately
  meta:
    reset_connection
